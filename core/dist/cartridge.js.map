{"version":3,"sources":["../src/cartridge.ts"],"names":["Cartridge","bytes","address","Uint8Array","nintendoLogo","length","isValid","cartridge","map","readByte"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA;IACaA,S;;;AAIX,qBAAmBC,KAAnB,EAAsC;AAAA;;AAAA;;AACpC,SAAKA,KAAL,GAAaA,KAAb;AACD;;;;6BAEeC,O,EAAmC;AACjD,aAAO,KAAKD,KAAL,CAAWC,OAAX,CAAP;AACD;;;wCAEiCD,K,EAA8B;AAC9D,aAAO,IAAID,SAAJ,CACL,IAAIG,UAAJ,EACE,IADF,EACQ;AACN,UAFF,EAEQ;AACN,UAHF,EAGQ;AACN,UAJF,4BAKKC,qBALL,sBAMKH,KANL,GADK,CAAP;AAUD;;;;;;;;gBAvBUD,S,cACsC,IAAII,sBAAaC,M;;AAyB7D,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,SAAD;AAAA,SACrB,qBACE,mBAAM,MAAN,EAAc,SAAS,CAAvB,EACGC,GADH,CACO,UAACN,OAAD;AAAA,WAAaK,SAAS,CAACE,QAAV,CAAmBP,OAAnB,CAAb;AAAA,GADP,CADF,EAGEE,qBAHF,CADqB;AAAA,CAAhB","sourcesContent":["import { ByteValue, MemoryAddress } from \"./types\";\nimport { isEqual, range } from \"lodash\";\nimport nintendoLogo from \"./nintendoLogo\";\n\n// TODO: ROM banks, etc\nexport class Cartridge {\n  public static readonly PC_START: MemoryAddress = 4 + nintendoLogo.length;\n  public readonly bytes: Uint8Array;\n\n  public constructor(bytes: Uint8Array) {\n    this.bytes = bytes;\n  }\n\n  public readByte(address: MemoryAddress): ByteValue {\n    return this.bytes[address];\n  }\n\n  public static newWithNintendoLogo(bytes: Uint8Array): Cartridge {\n    return new Cartridge(\n      new Uint8Array([\n        0x00, // 0x0100\n        0x00, // 0x0101\n        0x00, // 0x0102\n        0x00, // 0x0103\n        ...nintendoLogo,\n        ...bytes\n      ])\n    );\n  }\n}\n\nexport const isValid = (cartridge: Cartridge): Boolean =>\n  isEqual(\n    range(0x0004, 0x0033 + 1)\n      .map((address) => cartridge.readByte(address)),\n    nintendoLogo\n  )\n"],"file":"cartridge.js"}