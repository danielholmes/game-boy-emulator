{"version":3,"sources":["../../src/cpu/sub.ts"],"names":["subR","opCode","register","InstructionDefinition","loadRegister","compareToRegister","storeInRegister","subMHl","readMemory","subN","loadByteOperand"],"mappings":";;;;;;;AAAA;;AAGO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,MAAD,EAAiBC,QAAjB;AAAA,SAClB,IAAIC,mCAAJ,CAA0BF,MAA1B,gBAAyCC,QAAzC,GACGE,YADH,CACgBF,QADhB,EAEGG,iBAFH,CAEqB,GAFrB,EAGGC,eAHH,CAGmB,GAHnB,CADkB;AAAA,CAAb;;;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACN,MAAD;AAAA,SACpB,IAAIE,mCAAJ,CAA0BF,MAA1B,cACGG,YADH,CACgB,IADhB,EAEGI,UAFH,GAGGH,iBAHH,CAGqB,GAHrB,EAIGC,eAJH,CAImB,GAJnB,CADoB;AAAA,CAAf;;;;AAOA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACR,MAAD;AAAA,SAClB,IAAIE,mCAAJ,CAA0BF,MAA1B,WACGS,eADH,GAEGL,iBAFH,CAEqB,GAFrB,EAGGC,eAHH,CAGmB,GAHnB,CADkB;AAAA,CAAb","sourcesContent":["import { Instruction, InstructionDefinition, OpCode } from \"./instructions\";\nimport { ByteRegister } from \"./registers\";\n\nexport const subR = (opCode: OpCode, register: ByteRegister): Instruction =>\n  new InstructionDefinition(opCode, `SUB ${register}`)\n    .loadRegister(register)\n    .compareToRegister(\"a\")\n    .storeInRegister(\"a\");\n\nexport const subMHl = (opCode: OpCode): Instruction =>\n  new InstructionDefinition(opCode, `SUB (hl)`)\n    .loadRegister(\"hl\")\n    .readMemory()\n    .compareToRegister(\"a\")\n    .storeInRegister(\"a\");\n\nexport const subN = (opCode: OpCode): Instruction =>\n  new InstructionDefinition(opCode, `SUB n`)\n    .loadByteOperand()\n    .compareToRegister(\"a\")\n    .storeInRegister(\"a\");\n"],"file":"sub.js"}