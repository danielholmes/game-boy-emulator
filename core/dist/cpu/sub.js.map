{"version":3,"sources":["../../src/cpu/sub.ts"],"names":["createSubR","opCode","register","InstructionDefinition","loadRegister","compareToRegister","storeInRegister","createSubMHl","readMemory","createSubN","loadByteOperand"],"mappings":";;;;;;;AAAA;;AAGO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAiBC,QAAjB;AAAA,SACxB,IAAIC,mCAAJ,CAA0BF,MAA1B,gBAAyCC,QAAzC,GACGE,YADH,CACgBF,QADhB,EAEGG,iBAFH,CAEqB,GAFrB,EAGGC,eAHH,CAGmB,GAHnB,CADwB;AAAA,CAAnB;;;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACN,MAAD;AAAA,SAC1B,IAAIE,mCAAJ,CAA0BF,MAA1B,cACGG,YADH,CACgB,IADhB,EAEGI,UAFH,GAGGH,iBAHH,CAGqB,GAHrB,EAIGC,eAJH,CAImB,GAJnB,CAD0B;AAAA,CAArB;;;;AAOA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACR,MAAD;AAAA,SACxB,IAAIE,mCAAJ,CAA0BF,MAA1B,WACGS,eADH,GAEGL,iBAFH,CAEqB,GAFrB,EAGGC,eAHH,CAGmB,GAHnB,CADwB;AAAA,CAAnB","sourcesContent":["import { Instruction, InstructionDefinition, OpCode } from \"./instructions\";\nimport { ByteRegister } from \"./registers\";\n\nexport const createSubR = (opCode: OpCode, register: ByteRegister): Instruction =>\n  new InstructionDefinition(opCode, `SUB ${register}`)\n    .loadRegister(register)\n    .compareToRegister('a')\n    .storeInRegister('a');\n\nexport const createSubMHl = (opCode: OpCode): Instruction =>\n  new InstructionDefinition(opCode, `SUB (hl)`)\n    .loadRegister('hl')\n    .readMemory()\n    .compareToRegister('a')\n    .storeInRegister('a');\n\nexport const createSubN = (opCode: OpCode): Instruction =>\n  new InstructionDefinition(opCode, `SUB n`)\n    .loadByteOperand()\n    .compareToRegister('a')\n    .storeInRegister('a');\n"],"file":"sub.js"}