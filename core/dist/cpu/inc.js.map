{"version":3,"sources":["../../src/cpu/inc.ts"],"names":["createIncRr","opCode","register","InstructionDefinition","incrementRegister","createIncR","createIncSp","internalDelay"],"mappings":";;;;;;;AAAA;;AAGO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CACzBC,MADyB,EAEzBC,QAFyB;AAAA,SAIzB,IAAIC,mCAAJ,CAA0BF,MAA1B,gBAAyCC,QAAzC,GAAqDE,iBAArD,CACEF,QADF,CAJyB;AAAA,CAApB;;;;AAQA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACJ,MAAD,EAAiBC,QAAjB;AAAA,SACxB,IAAIC,mCAAJ,CAA0BF,MAA1B,gBAAyCC,QAAzC,GAAqDE,iBAArD,CACEF,QADF,CADwB;AAAA,CAAnB;;;;AAKA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACL,MAAD;AAAA,SACzB,IAAIE,mCAAJ,CAA0BF,MAA1B,EAAkC,QAAlC,EACGG,iBADH,CACqB,IADrB,EAEGG,aAFH,EADyB;AAAA,CAApB","sourcesContent":["import { Instruction, InstructionDefinition, OpCode } from \"./instructions\";\nimport { NonAfGroupedWordRegister, Register } from \"./registers\";\n\nexport const createIncRr = (\n  opCode: OpCode,\n  register: NonAfGroupedWordRegister\n): Instruction =>\n  new InstructionDefinition(opCode, `INC ${register}`).incrementRegister(\n    register\n  );\n\nexport const createIncR = (opCode: OpCode, register: Register): Instruction =>\n  new InstructionDefinition(opCode, `INC ${register}`).incrementRegister(\n    register\n  );\n\nexport const createIncSp = (opCode: OpCode): Instruction =>\n  new InstructionDefinition(opCode, \"INC sp\")\n    .incrementRegister(\"sp\")\n    .internalDelay();\n"],"file":"inc.js"}