{"version":3,"sources":["../../src/cpu/rst.ts"],"names":["RST_ADDRESSES","createRst","opCode","address","InstructionDefinition","toString","decrementStackPointer","loadProgramCounter","writeMemoryFromStackPointer","setProgramCounter"],"mappings":";;;;;;;AAAA;;AAwBO,IAAMA,aAAwC,GAAG,CACtD,MADsD,EAEtD,MAFsD,EAGtD,MAHsD,EAItD,MAJsD,EAKtD,MALsD,EAMtD,MANsD,EAOtD,MAPsD,EAQtD,MARsD,CAAjD;;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAiBC,OAAjB;AAAA,SACvB,IAAIC,mCAAJ,CAA0BF,MAA1B,iBAA0CC,OAAO,CAACE,QAAR,CAAiB,EAAjB,CAA1C,GACGC,qBADH,CACyB,CADzB,EAEGC,kBAFH,GAGGC,2BAHH,GAIGC,iBAJH,CAIqBN,OAJrB,CADuB;AAAA,CAAlB,C,CAOP;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { Instruction, InstructionDefinition, OpCode } from \"./instructions\";\n\n/*\nrsv: function() {\n      Z80._rsv.a = Z80._r.a;\n      Z80._rsv.b = Z80._r.b;\n      Z80._rsv.c = Z80._r.c;\n      Z80._rsv.d = Z80._r.d;\n      Z80._rsv.e = Z80._r.e;\n      Z80._rsv.f = Z80._r.f;\n      Z80._rsv.h = Z80._r.h;\n      Z80._rsv.l = Z80._r.l;\n    }\n */\n\nexport type RstAddress =\n  | 0x0000\n  | 0x0008\n  | 0x0010\n  | 0x0018\n  | 0x0020\n  | 0x0028\n  | 0x0030\n  | 0x0038;\nexport const RST_ADDRESSES: ReadonlyArray<RstAddress> = [\n  0x0000,\n  0x0008,\n  0x0010,\n  0x0018,\n  0x0020,\n  0x0028,\n  0x0030,\n  0x0038\n];\n\nexport const createRst = (opCode: OpCode, address: RstAddress): Instruction =>\n  new InstructionDefinition(opCode, `RST $${address.toString(16)}`)\n    .decrementStackPointer(2)\n    .loadProgramCounter()\n    .writeMemoryFromStackPointer()\n    .setProgramCounter(address);\n\n// Z80._r.pc=0x08;\n\n// self.PC += 1\n// self.mb[self.SP-1] = self.PC >> 8 # High\n// self.mb[self.SP-2] = self.PC & 0xFF # Low\n// self.SP -= 2\n// self.PC = 0\n"],"file":"rst.js"}