{"version":3,"sources":["../../src/cpu/index.ts"],"names":["Cpu","registers","CpuRegistersImpl","remainingCycles","mmu","cycles","tickCycle","opCode","readByte","pc","instruction","INSTRUCTIONS","Error","execute","map","register1","register2","register","value","i"],"mappings":"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","sourcesContent":["import { Mmu } from \"../memory/mmu\";\nimport { fromPairs } from \"lodash\";\nimport { Instruction, OpCode } from \"./instructions\";\nimport {\n  createLddMHlA,\n  createLdGrNn,\n  createLdHlMR,\n  createLdMCA,\n  createLdMNA,\n  createLdMNnA,\n  createLdMNnSp,\n  createLdMRA,\n  createLdRN,\n  createLdRR,\n  createLdSpNn\n} from \"./ld\";\nimport {\n  ByteRegister,\n  CpuRegisters,\n  CpuRegistersImpl,\n  GroupedWordRegister,\n  Register\n} from \"./registers\";\nimport { createRst, RstAddress } from \"./rst\";\nimport { createDecR } from \"./dec\";\nimport { createIncR, createIncRr, createIncSp } from \"./inc\";\nimport { createNop } from \"./special\";\nimport { createXorR } from \"./xor\";\nimport { numberToByteHex } from \"../types\";\nimport { createCb } from \"./cb\";\nimport { createJrNzN } from \"./jr\";\nimport { createSbcAR } from \"./sbc\";\n\nexport type ClockCycles = number;\n\nexport class Cpu {\n  public readonly registers: CpuRegisters;\n  // Temporary variable until refactor done\n  private remainingCycles: ClockCycles;\n\n  public constructor() {\n    this.registers = new CpuRegistersImpl();\n    this.remainingCycles = 0;\n  }\n\n  // TODO: See device comments for changes\n  public tick(mmu: Mmu, cycles: ClockCycles): void {\n    this.remainingCycles += cycles;\n\n    // Note: that this currently goes below 0 which is a no no. Should only\n    // simulate up to current available cycles\n    while (this.remainingCycles > 4) {\n      this.tickCycle(mmu);\n    }\n  }\n\n  public tickCycle(mmu: Mmu): void {\n    const opCode = mmu.readByte(this.registers.pc);\n    this.remainingCycles -= 4;\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const instruction = INSTRUCTIONS[opCode];\n    if (!instruction) {\n      throw new Error(\n        `No instruction for opCode ${numberToByteHex(\n          opCode\n        )} reading from pc ${numberToByteHex(this.registers.pc)}`\n      );\n    }\n    this.registers.pc++;\n\n    this.remainingCycles -= instruction.execute(this, mmu);\n  }\n}\n\n// LD A,(HL) 7E 8\n// LD B,(HL) 46 8\n// LD C,(HL) 4E 8\n// LD D,(HL) 56 8\n// LD E,(HL) 5E 8\n// LD H,(HL) 66 8\n// LD L,(HL) 6E 8\n\n// LD (HL),n 36 12\n\n// DEC (HL) 35 12\n\nconst INSTRUCTIONS: { [opCode: number]: Instruction } = fromPairs(\n  [\n    createNop(0x00),\n\n    ...([\n      [0x7f, \"a\", \"a\"],\n      [0x78, \"a\", \"b\"],\n      [0x79, \"a\", \"c\"],\n      [0x7a, \"a\", \"d\"],\n      [0x7b, \"a\", \"e\"],\n      [0x7c, \"a\", \"h\"],\n      [0x7d, \"a\", \"l\"],\n      [0x40, \"b\", \"b\"],\n      [0x41, \"b\", \"c\"],\n      [0x42, \"b\", \"d\"],\n      [0x43, \"b\", \"e\"],\n      [0x44, \"b\", \"h\"],\n      [0x45, \"b\", \"l\"],\n      [0x48, \"c\", \"b\"],\n      [0x49, \"c\", \"c\"],\n      [0x4a, \"c\", \"d\"],\n      [0x4b, \"c\", \"e\"],\n      [0x4c, \"c\", \"h\"],\n      [0x4d, \"c\", \"l\"],\n      [0x50, \"d\", \"b\"],\n      [0x51, \"d\", \"c\"],\n      [0x52, \"d\", \"d\"],\n      [0x53, \"d\", \"e\"],\n      [0x54, \"d\", \"h\"],\n      [0x55, \"d\", \"l\"],\n      [0x58, \"e\", \"b\"],\n      [0x59, \"e\", \"c\"],\n      [0x5a, \"e\", \"d\"],\n      [0x5b, \"e\", \"e\"],\n      [0x5c, \"e\", \"h\"],\n      [0x5d, \"e\", \"l\"],\n      [0x60, \"h\", \"b\"],\n      [0x61, \"h\", \"c\"],\n      [0x62, \"h\", \"d\"],\n      [0x63, \"h\", \"e\"],\n      [0x64, \"h\", \"h\"],\n      [0x65, \"h\", \"l\"],\n      [0x68, \"l\", \"b\"],\n      [0x69, \"l\", \"c\"],\n      [0x6a, \"l\", \"d\"],\n      [0x6b, \"l\", \"e\"],\n      [0x6c, \"l\", \"h\"],\n      [0x6d, \"l\", \"l\"]\n    ] as ReadonlyArray<[OpCode, ByteRegister, ByteRegister]>).map(\n      ([opCode, register1, register2]) =>\n        createLdRR(opCode, register1, register2)\n    ),\n\n    createLdMNnA(0xea),\n\n    ...([\n      [0x70, \"b\"],\n      [0x71, \"c\"],\n      [0x72, \"d\"],\n      [0x73, \"e\"],\n      [0x74, \"h\"],\n      [0x75, \"l\"],\n      [0x77, \"a\"]\n    ] as ReadonlyArray<[OpCode, ByteRegister]>).map(([opCode, register]) =>\n      createLdHlMR(opCode, register)\n    ),\n\n    ...([[0x0a, \"bc\"], [0x1a, \"de\"], [0x7e, \"hl\"]] as ReadonlyArray<\n      [OpCode, GroupedWordRegister]\n    >).map(([opCode, register]) => createLdMRA(opCode, register)),\n\n    createLdMNA(0xe0),\n\n    ...([\n      [0x06, \"b\"],\n      [0x0e, \"c\"],\n      [0x16, \"d\"],\n      [0x1e, \"e\"],\n      [0x26, \"h\"],\n      [0x2e, \"l\"],\n      [0x3e, \"a\"]\n    ] as ReadonlyArray<[OpCode, ByteRegister]>).map(([opCode, register]) =>\n      createLdRN(opCode, register)\n    ),\n\n    ...([[0x01, \"bc\"], [0x11, \"de\"], [0x21, \"hl\"]] as ReadonlyArray<\n      [OpCode, GroupedWordRegister]\n    >).map(([opCode, register]) => createLdGrNn(opCode, register)),\n\n    createLdSpNn(0x31),\n\n    ...([\n      [0xc7, 0x0000],\n      [0xcf, 0x0008],\n      [0xd7, 0x0010],\n      [0xdf, 0x0018],\n      [0xe7, 0x0020],\n      [0xef, 0x0028],\n      [0xf7, 0x0030],\n      [0xff, 0x0038]\n    ] as ReadonlyArray<[OpCode, RstAddress]>).map(([opCode, value]) =>\n      createRst(opCode, value)\n    ),\n\n    createLdMNnSp(0x08),\n\n    ...([\n      [0x3d, \"a\"],\n      [0x05, \"b\"],\n      [0x0d, \"c\"],\n      [0x15, \"d\"],\n      [0x1d, \"e\"],\n      [0x25, \"h\"],\n      [0x2d, \"l\"]\n    ] as ReadonlyArray<[OpCode, ByteRegister]>).map(([opCode, register]) =>\n      createDecR(opCode, register)\n    ),\n\n    ...([[0x03, \"bc\"], [0x13, \"de\"], [0x23, \"hl\"]] as ReadonlyArray<\n      [OpCode, GroupedWordRegister]\n    >).map(([opCode, register]) => createIncRr(opCode, register)),\n\n    createIncSp(0x33),\n\n    ...([\n      [0x3c, \"a\"],\n      [0x04, \"b\"],\n      [0x0c, \"c\"],\n      [0x14, \"d\"],\n      [0x1c, \"e\"],\n      [0x24, \"h\"],\n      [0x2c, \"l\"]\n    ] as ReadonlyArray<[OpCode, Register]>).map(([opCode, register]) =>\n      createIncR(opCode, register)\n    ),\n\n    ...([\n      [0xaf, \"a\"],\n      [0xa8, \"b\"],\n      [0xa9, \"c\"],\n      [0xaa, \"d\"],\n      [0xab, \"e\"],\n      [0xac, \"h\"],\n      [0xad, \"l\"]\n    ] as ReadonlyArray<[OpCode, ByteRegister]>).map(([opCode, register]) =>\n      createXorR(opCode, register)\n    ),\n\n    createLddMHlA(0x32),\n\n    createLdMCA(0xe2),\n\n    createCb(0xcb),\n\n    createJrNzN(0x20),\n\n    ...([\n      [0x9f, \"a\"],\n      [0x98, \"b\"],\n      [0x99, \"c\"],\n      [0x9a, \"d\"],\n      [0x9b, \"e\"],\n      [0x9c, \"h\"],\n      [0x9d, \"l\"]\n    ] as ReadonlyArray<[OpCode, ByteRegister]>).map(([opCode, register]) =>\n      createSbcAR(opCode, register)\n    )\n  ].map((i: Instruction) => [i.opCode, i])\n);\n"],"file":"index.js"}